---
# vim: set ft=ansible ts=2 sw=2 et:

#
# CrossN v1.0 - initial release.
#

# Originally based on
#   https://github.com/mengbo/linux-sysprep/blob/master/sysprep.sh
#   and
#   https://github.com/libguestfs/libguestfs/tree/master/sysprep

#TODO: change all the rm- rfv into an include

#TODO: - name: "Remove the user accounts"

#TODO:- name: "Remove user at-jobs and cron-jobs"
#	jobs_dir="
#/var/spool/cron
#/var/spool/at
#/var/spool/atjobs
#/var/spool/atspool
#when: linux_sysprep_cron | bool

#TODO: - name: "Change filesystem UUIDs"

#TODO: - name: "Change LVM2 PV and VG UUIDs"

#TODO: - name: "Remove the local machine ID"

#TODO: - name: "Remove the process accounting log files"
# 	# Redhat
# 	[ -f /var/account/pacct ] &&
#       - "rm -f /var/account/pacct*" &&
#       - "touch /var/account/pacct"
# 	# Debian
# 	[ -f /var/log/account/pacct ] &&
#       - "rm -f /var/log/account/pacct*" &&
#       - "touch /var/log/account/pacct"


  - name: "Remove the crash data generated by ABRT"
    shell: "rm -rvf /var/spool/abrt/*"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    when: linux_sysprep_abrt | bool

  - name: "Remove the bash history"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -fv /root/.bash_history"
      - "rm -fv /home/*/.bash_history"
    when: linux_sysprep_bash | bool

  - name: "Remove blkid tab"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -vf /var/run/blkid.tab"
      - "rm -vf /var/run/blkid.tab.old"
      - "rm -vf /etc/blkid/blkid.tab"
      - "rm -vf /etc/blkid/blkid.tab.old"
      - "rm -vf /etc/blkid.tab"
      - "rm -vf /etc/blkid.tab.old"
      - "rm -vf /dev/.blkid.tab"
      - "rm -vf /dev/.blkid.tab.old"
    when: linux_sysprep_blkid | bool

  - name: "Remove CA certificates"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -vf /etc/pki/CA/certs/*.crt"
      - "rm -vf /etc/pki/CA/crl/*.crt"
      - "rm -vf /etc/pki/CA/newcerts/*.crt"
      - "rm -vf /etc/pki/CA/private/*.key"
      - "rm -vf /etc/pki/tls/private/*.key"
    when: linux_sysprep_cacerts | bool

  - name: "Remove the crash data generated by kexec-tools"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -rvf /var/crash/*"
      - "rm -rvf /var/log/dump/*"
    when: linux_sysprep_crash | bool



  - name: "Remove DHCP client leases"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -rvf /var/lib/dhclient/*"
      - "rm -rvf /var/lib/dhcp/*"
    when: linux_sysprep_dhcp_client | bool

  - name: "Remove DHCP server leases"
    shell: "rm -rvf /var/lib/dhcpd/*"
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    args:
      warn: no
    when: linux_sysprep_dhcp_server | bool

  - name: "Remove Dovecot (mail server) data"
    shell: "rm -vf /var/lib/dovecot/*"
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    args:
      warn: no
    when: linux_sysprep_dovecot | bool

  - name: "Remove the firewall rules"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -vf /etc/sysconfig/iptables"
      - "rm -vf /etc/firewalld/services/*"
      - "rm -vf /etc/firewalld/zones/*"
    when: linux_sysprep_firewall | bool

  - name: "Flag the system for reconfiguration"
    shell: "touch /.unconfigured"
    args:
      warn: no
    when: linux_sysprep_reconfig | bool




  - name: "Remove Kerberos data"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -vf /var/kerberos/krb5kdc/kadm5.acl"
      - "rm -vf /var/kerberos/krb5kdc/kdc.conf"
    when: linux_sysprep_krb | bool


  #TODO:
  #TODO: Must test this after a new provisioning
  #TODO:

  - name: unregister server from RHN - Secure config will attach if required
    redhat_subscription:
      state: absent
      #username: joe_user
      #password: somepass
    ignore_errors: yes

  - name: "Remove the RH subscription manager files"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -rvf /etc/pki/consumer/*"
      - "rm -rvf /etc/pki/entitlement/*"
    when: linux_sysprep_rhnpki | bool

  - name: "Remove the RHN system ID"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -vf /etc/sysconfig/rhn/systemid"
      - "rm -vf /etc/sysconfig/rhn/osad-auth.conf"
    when: linux_sysprep_rhnsysid | bool


  - name: "Remove many log files"
    shell: "{{ item }}"
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    args:
      warn: no
    with_items:
      - "rm -rvf /var/log/*.log*"
      - "rm -rvf /var/log/audit/*"
      - "rm -rvf /var/log/btmp*"
      - "rm -rvf /var/log/cron*"
      - "rm -rvf /var/log/dmesg*"
      - "rm -rvf /var/log/lastlog*"
      - "rm -rvf /var/log/maillog*"
      - "rm -rvf /var/log/mail/*"
      - "rm -rvf /var/log/messages*"
      - "rm -rvf /var/log/secure*"
      - "rm -rvf /var/log/spooler*"
      - "rm -rvf /var/log/tallylog*"
      - "rm -rvf /var/log/wtmp*"
      - "rm -rvf /var/log/apache2/*_log"
      - "rm -rvf /var/log/apache2/*_log-*"
      - "rm -rvf /var/log/ntp"
      - "rm -rvf /var/log/tuned/tuned.log"
      - "rm -rvf /var/log/debug*"
      - "rm -rvf /var/log/syslog*"
      - "rm -rvf /var/log/faillog*"
      - "rm -rvf /var/log/firewalld*"
      - "rm -rvf /var/log/grubby*"
      - "rm -rvf /var/log/xferlog*"
#- name: "(* logfiles configured by /etc/logrotate.d/* *)"
      - "rm -rvf /var/log/BackupPC/LOG"
      - "rm -rvf /var/log/ceph/*.log"
      - "rm -rvf /var/log/chrony/*.log"
      - "rm -rvf /var/log/cups/*_log*"
      - "rm -rvf /var/log/glusterfs/*glusterd.vol.log"
      - "rm -rvf /var/log/glusterfs/glusterfs.log"
      - "rm -rvf /var/log/httpd/*log"
      - "rm -rvf /var/log/jetty/jetty-console.log"
      - "rm -rvf /var/log/libvirt/libxl/*.log"
      - "rm -rvf /var/log/libvirt/libvirtd.log"
      - "rm -rvf /var/log/libvirt/lxc/*.log"
      - "rm -rvf /var/log/libvirt/qemu/*.log"
      - "rm -rvf /var/log/libvirt/uml/*.log"
      - "rm -rvf /var/named/data/named.run"
      - "rm -rvf /var/log/ppp/connect-errors"
      - "rm -rvf /var/log/setroubleshoot/*.log"
      - "rm -rvf /var/log/squid/*.log"
#- name: "(* And the status file of logrotate *)"
      - "rm -rvf /var/lib/logrotate.status"
#- name: "(* yum installation files *)"
      - "rm -rvf /root/install.log"
      - "rm -rvf /root/install.log.syslog"
      - "rm -rvf /root/anaconda-ks.cfg"
      - "rm -rvf /root/anaconda-post.log"
      - "rm -rvf /root/initial-setup-ks.cfg"
      - "rm -rvf /var/log/anaconda.syslog"
      - "rm -rvf /var/log/anaconda/*"
#- name: "(* debian-installer files *)"
      - "rm -rvf /var/log/installer/*"
#- name: "(* GDM and session preferences. *)"
      - "rm -rvf /var/cache/gdm/*"
      - "rm -rvf /var/lib/AccountService/users/*"
#- name: "(* Fingerprint service files *)"
      - "rm -rvf /var/lib/fprint/*"
#- name: "(* fontconfig caches *)"
      - "rm -rvf /var/cache/fontconfig/*"
#- name: "(* man pages cache *)"
      - "rm -rvf /var/cache/man/*"
#- name: "(* log file of sysstat *)"
      - "rm -rvf /var/log/sa/*"
#- name: "(* log file of gdm *)"
      - "rm -rvf /var/log/gdm/*"
#- name: "(* log file of lightdm *)"
      - "rm -rvf /var/log/lightdm/*"
#- name: "(* log file of ntp *)"
      - "rm -rvf /var/log/ntpstats/*"
#- name: "(* Pegasus certificates and other files *)"
      - "rm -rvf /etc/Pegasus/*.cnf"
      - "rm -rvf /etc/Pegasus/*.crt"
      - "rm -rvf /etc/Pegasus/*.csr"
      - "rm -rvf /etc/Pegasus/*.pem"
      - "rm -rvf /etc/Pegasus/*.srl"
#- name: "(* Red Hat subscription manager log files *)"
      - "rm -rvf /var/log/rhsm/*"
#- name: "(* journals of systemd *)"
      - "rm -rvf /var/log/journal/*"
#- name: "(* Debian logs: apt & aptitude *)"
      - "rm -rvf /var/log/aptitude*"
      - "rm -rvf /var/log/apt/*"
#- name: "(* log files of exim *)"
      - "rm -rvf /var/log/exim4/*"
#- name: "(* log files of ConsoleKit *)"
      - "rm -rvf /var/log/ConsoleKit/*"
    when: linux_sysprep_logs | bool


  - name: "Remove email from the local mail spool directory"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -rvf /var/spool/mail/*"
      - "rm -rvf /var/mail/*"
    when: linux_sysprep_emailspool | bool

  #- name: "Remove HOSTNAME in network interface configuration" - IGNORED

  - name: "Remove eth0 HWADDR (hard-coded MAC address) configuration"
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      regexp: "^HWADDR"
      state: absent
    when: linux_sysprep_eth_hwaddr | bool

  - name: "Remove eth0 UUID configuration"
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      regexp: "^UUID"
      state: absent
    when: linux_sysprep_eth_uuid | bool
    #uuidgen eth0
  

  - name: "Clean package manager cache"
    shell: "{{ item }}"
    args:
      warn: no
    with_items:
      - "which apt-get > /dev/null && apt-get clean"
      - "which yum > /dev/null && yum clean all"
      - "rm -rf /var/cache/yum/*"
      - "which dnf > /dev/null && dnf clean all"
    ignore_errors: yes
    no_log: yes
    when: linux_sysprep_pkgmgr | bool



  - name: "Remove the PAM data"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -vf /var/run/console/*" 
      - "rm -vf /var/run/faillock/*" 
      - "rm -vf /var/run/sepermit/*" 
    when: linux_sysprep_pam | bool



  - name: "Remove the data and log files of puppet"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -vf /var/log/puppet/*"
      - "rm -vf /var/lib/puppet/*/*"
      - "rm -vf /var/lib/puppet/*/*/*"
    when: linux_sysprep_puppet | bool




  - name: "Remove host-specific RPM database files"
    shell: "rm -vf /var/lib/rpm/__db.*"
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    args:
      warn: no
    when: linux_sysprep_rpmdb | bool


  - name: "Remove the database and log files of Samba"
    shell: "{{ item }}"
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    args:
      warn: no
    with_items:
      - "rm -vf /var/log/samba/old/*"
      - "rm -vf /var/log/samba/*"
      - "rm -vf /var/lib/samba/*/*"
      - "rm -vf /var/lib/samba/*"
    when: linux_sysprep_samba | bool
    ignore_errors: yes # /var/lib/samba/private causes issues on Ubuntu18

  - name: "Remove the hardware UUID"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -vf /etc/sysconfig/hw-uuid"
      - "rm -vf /etc/smolt/uuid"
      - "rm -vf /etc/smolt/hw-uuid"
    when: linux_sysprep_hwid | bool


  - name: "Remove the SSH host keys"
    shell: "rm -vf /etc/ssh/*_host_*"
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    args:
      warn: no
    when: linux_sysprep_ssh_hostkeys | bool

  - name: "Remove \".ssh\" directories"
    shell: "{{ item }}"
    args:
      warn: no
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    with_items:
      - "rm -rvf /root/.ssh"
      - "rm -rvf /home/*/.ssh"
    when: linux_sysprep_user_ssh_dirs | bool

  - name: "Remove the database and log files of sssd"
    shell: "{{ item }}"
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    args:
      warn: no
    with_items:
      - "rm -vf /var/log/sssd/*"
      - "rm -vf /var/lib/sss/db/*"
    when: linux_sysprep_sssd | bool

  - name: "Remove temporary files"
    shell: "{{ item }}"
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    args:
      warn: no
    with_items:
     # - "rm -rvf /tmp/*"
      - "rm -rvf /var/tmp/*"
    when: linux_sysprep_tmp | bool


  - name: "Remove udev persistent net rules"
    shell: "rm -vf /etc/udev/rules.d/70-persistent-net.rules"
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    args:
      warn: no
    when: linux_sysprep_persnet | bool



  - name: "Remove the utmp file"
    shell: "rm -vf /var/run/utmp"
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    args:
      warn: no
    when: linux_sysprep_utmp | bool

  - name: "Remove the yum UUID"
    shell: "rm -vf /var/lib/yum/uuid"
    register: shell_out
    changed_when: "'removed' in shell_out.stdout"
    args:
      warn: no
    when: linux_sysprep_yumuuid | bool

